@model ExchangeApp.Models.Faculty

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="container">
    <div class="interior site">
        <div class="ml-15">
            <a href="@Url.Action("Index", "Faculties" )" title="Back" style="font-size: 25px;"><i class="icon ion-android-arrow-dropleft-circle"></i></a>
            <span class="fax-title">@Html.DisplayFor(model => model.Name)</span>
        </div>
        @using (Html.BeginForm("Edit", "Faculties", FormMethod.Post, new { id = "editFacultyForm", enctype = "multipart/form-data" }))

        {
            @Html.AntiForgeryToken()
        <div class="mt-10">
            <div class="row col-lg-12 col-md-10 mt-10">
                <div class="col-lg-4 col-md-10 mt-10">
                    @Html.CheckBox("IsFeatured")
                    <label class="lbl-chk">Mark as featured</label>
                </div>
                <div class="col-lg-4 col-md-10 mt-10">
                    @Html.CheckBox("Display")
                    <label class="lbl-chk">Display college/university</label>
                </div>
            </div>
            <div class="row col-lg-12 col-md-10 mt-10">
                <div class="col-lg-4 col-md-10 mt-10">
                    <label>
                        College/University Name
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { placeholder = "Enter college/university name" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-4 col-md-10 mt-10">
                    <label>
                        Program
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.EditorFor(model => model.Program, new { htmlAttributes = new { placeholder = "Enter program" } })
                        @Html.ValidationMessageFor(model => model.Program, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-4 col-md-10 mt-10">
                    <label>
                        E-mail
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { placeholder = "Enter e-mail address" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row col-lg-12 col-md-10 mt-10">
                <div class="col-lg-4 col-md-10 mt-10">
                    <label>
                        Website
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.EditorFor(model => model.Website, new { htmlAttributes = new { placeholder = "Enter website url" } })
                        @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-4 col-md-10 mt-10">
                    <label>
                        Country/State
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.DropDownListFor(model => model.CountryId, ViewBag.CountriesList as SelectList, "Select country/state")
                        @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-4 col-md-10 mt-10">
                    <label>
                        Date of Membership
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.TextBoxFor(model => model.DateOfMatriculation, "{0:MM/dd/yyyy}", new { @class = "datepicker", onkeydown = "return false", placeholder = "Select date of matriculation" })
                        @Html.ValidationMessageFor(model => model.DateOfMatriculation, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row col-lg-12 col-md-10 mt-10">
                <div class="col-lg-4 col-md-10 mt-10">
                    <label>
                        Accreditation Number
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.EditorFor(model => model.AccreditationNumber, new { htmlAttributes = new { placeholder = "Enter accreditation number" } })
                        @Html.ValidationMessageFor(model => model.AccreditationNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-4 col-md-10 mt-10">
                    <label>
                        Date of Accreditation
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.TextBoxFor(model => model.DateOfAccreditation, "{0:MM/dd/yyyy}", new { @class = "datepicker", onkeydown = "return false", placeholder = "Select date of accreditation" })
                        @Html.ValidationMessageFor(model => model.DateOfAccreditation, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-4 col-md-10 mt-10">
                    <label>
                        Agreement Number
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.EditorFor(model => model.AgreementNumber, new { htmlAttributes = new { placeholder = "Enter agreement number", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.AgreementNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row col-lg-12 col-md-10 mt-10">
                <div class=" col-lg-12 col-md-10 mt-10">
                    <label>
                        Description
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.TextAreaFor(model => model.Description, 6, 151, new { maxlength = 2000 })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row col-lg-12 col-md-10 mt-10">
                <div class="col-lg-6 col-md-10 mt-10">
                    <label>
                        Existing Image
                    </label>
                    <div>
                        @if (Model.LogoImage != null)
                {
                    <img style="max-height: 100px" src="data:image;base64,@System.Convert.ToBase64String(Model.LogoImage)" />
        }
        else
        {
            <img style="max-height: 100px" src="~/Content/images/No_Image_Available.jpg" />

}
                    </div>
                    @if (Model.LogoImage != null)
            {
                <a onclick="DeleteImage(@Model.ID)" class="btn btn-danger"> Delete Image</a>
    }
                </div>

                <div class="col-lg-6 col-md-10 mt-20">
                    <label>
                        Upload Image
                    </label>
                    <div>
                        @Html.TextBox("File", "", new { type = "file", id = "fileControl", accept = ".png,.jpg,.jpeg" }) <br />
                    </div>
                </div>
            </div>

            <div class="clearfix"></div>
            <div class="row col-lg-12 col-md-10 mt-10">
                <div class="col-lg-6 col-md-10 mt-10 mb-10">
                    <div class="col-lg-6 col-md-10 mt-10">
                        <div class="radio-inline">
                            @Html.CheckBox("StudentSelected", new { id = "chkStudent" })
                            <label class="lbl-chk">Places for student</label>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-10 mt-10">
                        <div class="radio-inline">
                            @Html.CheckBox("FacultySelected", new { id = "chkFaculty" })
                            <label class="lbl-chk">Places for faculty</label>
                        </div>
                    </div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="clearfix"></div>
            @*STUDENT*@
            <div id="studentPlaces" class="row col-lg-12 col-md-10 mt-10">
                <div class="col-lg-3 col-md-10 mt-10">
                    <label>
                        Student Type of Exchange
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.DropDownListFor(model => model.StudentTypeOfExchangeId, ViewBag.TypesOfExchangeStudent as SelectList, "Select type of exchange")
                        @Html.ValidationMessageFor(model => model.StudentTypeOfExchangeId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-10 mt-10">
                    <label>
                        Student Places Available
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.EditorFor(model => model.StudentPlacesAvailable, new { htmlAttributes = new { placeholder = "Enter student places available" } })
                        @Html.ValidationMessageFor(model => model.StudentPlacesAvailable, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-10 mt-10">
                    <label>
                        Student Application Date
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.TextBoxFor(model => model.StudentApplicationDate, "{0:MM/dd/yyyy}", new { @class = "datepicker", onkeydown = "return false", placeholder = "Select student application date" })
                        @Html.ValidationMessageFor(model => model.StudentApplicationDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-10 mt-10">
                    <label>
                        Student Enrollment Date
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.TextBoxFor(model => model.StudentEnrollmentDate, "{0:MM/dd/yyyy}", new { @class = "datepicker", onkeydown = "return false", placeholder = "Select student enrollment date" })
                        @Html.ValidationMessageFor(model => model.StudentEnrollmentDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div id="facultyPlaces" class="row col-lg-12 col-md-10 mt-10">
                <div class="clearfix"></div>
                @*FACULTY*@
                <div class="col-lg-3 col-md-10 mt-10">
                    <label>
                        Faculty Type of Exchange
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.DropDownListFor(model => model.FacultyTypeOfExchangeId, ViewBag.TypesOfExchangeFaculty as SelectList, "Select type of exchange")
                        @Html.ValidationMessageFor(model => model.FacultyTypeOfExchangeId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-10 mt-10">
                    <label>
                        Faculty Places Available
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.EditorFor(model => model.FacultyPlacesAvailable, new { htmlAttributes = new { placeholder = "Enter faculty places available" } })
                        @Html.ValidationMessageFor(model => model.FacultyPlacesAvailable, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-10 mt-10">
                    <label>
                        Faculty Application Date
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.TextBoxFor(model => model.FacultyApplicationDate, "{0:MM/dd/yyyy}", new { @class = "datepicker", onkeydown = "return false", placeholder = "Select faculty application date" })
                        @Html.ValidationMessageFor(model => model.FacultyApplicationDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-3 col-md-10 mt-10">
                    <label>
                        Faculty Engagement Date
                        <sup>*</sup>
                    </label>
                    <div>
                        @Html.TextBoxFor(model => model.FacultyEnrollmentDate, "{0:MM/dd/yyyy}", new { @class = "datepicker", onkeydown = "return false", placeholder = "Select faculty engagement date" })
                        @Html.ValidationMessageFor(model => model.FacultyEnrollmentDate, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            @Html.HiddenFor(m => m.LogoImage)

            @Html.HiddenFor(m => m.LastUpdated)
            @Html.HiddenFor(m => m.Registered)
            @Html.HiddenFor(m => m.RegisteredBy)
            @Html.HiddenFor(m => m.LastUpdatedBy)
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.RowVersion)

            <div class="col-md-10 mt-30" style="margin-left:89%">
                <input type="submit" value="Save" class="btn btn-success">
            </div>

            <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog modal-sm " role="document">
                    <div class="modal-content">
                        <div class="modal-header pd-5">
                            <h4 class="modal-title" id="myModalLabel">Confirmation dialog</h4>
                        </div>
                        <div class="modal-body pd-10">
                            Are you sure you want to delete existing logo?
                        </div>
                        <div class="modal-footer pd-0">
                            <div>
                                <div class="col-lg-6 col-md-10 mt-20">
                                    <button class="btn btn-default" data-dismiss="modal">Cancel</button>
                                </div>
                                <div class="col-lg-6 col-md-10 mt-20">
                                    <a class="btn btn-danger" onclick="ConfirmDelete()">Delete</a>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <input type="hidden" id="hiddenId" />
        </div>
        }

    </div>
</div>
@section scripts {
    <script>
    $(document).ready(function () {

        $('.datepicker').datepicker({ dateFormat: 'MM-DD-YYYY' });
        var studentPlaces = @(Model.StudentPlacesAvailable.HasValue ? Model.StudentPlacesAvailable.Value : 0);
        var facultyPlaces = @(Model.FacultyPlacesAvailable.HasValue ? Model.FacultyPlacesAvailable.Value : 0);

    if ((studentPlaces != null && studentPlaces > 0) || $("#chkStudent").is(':checked')) {
        $("#studentPlaces").show();
        $("#chkStudent").prop('checked', true);
    }
    else {
        $("#studentPlaces").hide();
        }


    if (facultyPlaces != null && facultyPlaces > 0 || $("#chkFaculty").is(':checked')) {
        $("#facultyPlaces").show();
        $("#chkFaculty").prop('checked', true);
    }
    else {
        $("#facultyPlaces").hide();
    }

    $("#chkStudent").click(function () {
        $("#studentPlaces .field-validation-error").empty();
        if ($(this).is(':checked')) {
            $("#studentPlaces").show();
        }
        else {
            $("#studentPlaces").hide();
            $('#StudentTypeOfExchangeId').prop('selectedIndex', 0);
            $('#StudentPlacesAvailable').val(null);
            $('#StudentApplicationDate').val(null);
            $('#StudentEnrollmentDate').val(null);
        }
    });

    $("#chkFaculty").click(function () {
        $("#facultyPlaces .field-validation-error").empty();

        if ($(this).is(':checked')) {
            $("#facultyPlaces").show();
        }
        else {
            $("#facultyPlaces").hide();
            $('#FacultyTypeOfExchangeId').prop('selectedIndex', 0);
            $('#FacultyPlacesAvailable').val(null);
            $('#FacultyApplicationDate').val(null);
            $('#FacultyEnrollmentDate').val(null);
        }
        });

});
        var DeleteImage = function (facultyId) {
            $("#deleteModal").modal("show");
            $("#hiddenId").val(facultyId)
        }

        var ConfirmDelete = function () {
            var facultyId = $("#hiddenId").val();

            $.ajax({
                type: "POST",
                url: "/Faculties/DeleteImage",
                data: { id: facultyId },
                success: function (data) {
                    $("#deleteModal").modal("hide");
                    window.location.href = "/Faculties/Edit/" + facultyId;
                }
            });

        }
    </script>
}
