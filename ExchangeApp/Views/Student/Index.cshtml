@model ExchangeApp.Models.StudentViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="job-view-page">
    <div id="main-content" class="super" role="main">
        <div class="interior site">
            <section id="inner-page-header" class="clearfix">
                <div class="site-name-tag">
                    <h1>@Model.Faculty.Name</h1>
                </div>
                <div id="job-search-form" class="clearfix" role="search">
                    @Html.Partial("../Shared/_SearchPartial", new ExchangeApp.Models.SearchViewModel())
                </div>
            </section>
            <div class="breadcrumbs site" role="navigation">
                <ol>
                    <li><a href='@Url.Action("Index", "Home")'>ACBSP Mobility Home</a></li>
                    <li><a href='@Url.Action("ListFaculties", "Home")'>Schools list</a></li>
                    <li>@Model.Faculty.Name</li>
                </ol>
            </div>
            <div class="clearfix">
                <section id="job-detail-view">
                    <div class="top-info">

                        <div class="title-CTA-tools clearfix">
                            <em><a class="inactive tooltip tooltipstered">University of Indianapolis</a></em>
                            <a id="applyBtn" class="primary ga_apply">Apply Now</a>
                        </div>
                    </div>
                    <div class="description-text">
                        @if (Model.Faculty.LogoImage != null)
                        {
                            <a href="@Model.Faculty.Website">
                                <div class="img__wrap">
                                    <img class="img__img" src="data:image;base64,@System.Convert.ToBase64String(Model.Faculty.LogoImage)" />
                                    <div class="img__description_layer">
                                        <p class="img__description">GO TO SITE ↗</p>
                                    </div>
                                </div>
                            </a>
                        }
                        else
                        {
                            <img style="max-height: 211px" src="~/Content/images/No_Image_Available.jpg" />

                        }
                        <div class="generic-details-text">
                            <span class="h5">Description</span>
                            <p>@Model.Faculty.Description</p>
                        </div>
                    </div>
                    <div class="job-data-contain">
                        <div class="job-data-basics clearfix">
                            <ul>
                                <li>
                                    <label>Location:</label>
                                    <span>
                                        @Model.Faculty.CountryObj.Name, @Model.Faculty.CountryObj.RegionObj.Name
                                    </span>
                                </li>
                                <li>
                                    <label>University ID:</label>
                                    <span>39576895</span>
                                </li>
                                <li>
                                    <label>E-mail:</label>
                                    <span>@Model.Faculty.Email</span>
                                </li>
                                <li>
                                    <label>Website:</label>
                                    <span>@Model.Faculty.Website</span>
                                </li>
                                <li>
                                    <label>Date of Matriculation: </label>
                                    <span>@Model.Faculty.DateOfMatriculation</span>
                                </li>
                                <li>
                                    <label>Date of Accreditation: </label>
                                    <span>@Model.Faculty.DateOfAccreditation</span>
                                </li>
                                <li>
                                    <label>Accreditation Number:</label>
                                    <span>@Model.Faculty.AccreditationNumber</span>
                                </li>
                                @if (Model.Faculty.StudentTypeOfExchangeObj != null)
                                {
                                    <li>
                                        <label>Student Type of Exchange:</label>
                                        <span>@Model.Faculty.StudentTypeOfExchangeObj.Name</span>
                                    </li>
                                    <li>
                                        <label>Student Places Available:</label>
                                        <span>@Model.Faculty.StudentPlacesAvailable</span>
                                    </li>
                                    <li>
                                        <label>Student Application Date:</label>
                                        <span>@Model.Faculty.StudentApplicationDate</span>
                                    </li>
                                    <li>
                                        <label>Student Enrollment Date:</label>
                                        <span>@Model.Faculty.StudentEnrollmentDate</span>
                                    </li>
                                }

                                @if (Model.Faculty.FacultyTypeOfExchangeObj != null)
                                {
                                    <li>
                                        <label>Faculty Type of Exchange:</label>
                                        <span>@Model.Faculty.FacultyTypeOfExchangeObj.Name</span>
                                    </li>
                                    <li>
                                        <label>Faculty Places Available:</label>
                                        <span>@Model.Faculty.FacultyPlacesAvailable</span>
                                    </li>
                                    <li>
                                        <label>Faculty Application Date:</label>
                                        <span>@Model.Faculty.FacultyApplicationDate</span>
                                    </li>
                                    <li>
                                        <label>Faculty Enrollment Date:</label>
                                        <span>@Model.Faculty.FacultyEnrollmentDate</span>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </section>
            </div>
        </div>
        <div class="app-form">
            <div class="interior site">
                <div class="default-form-box clearfix">
                    <div class="">
                        <strong>Create your application</strong>
                        @using (Html.BeginForm("SendApplication", "Student", FormMethod.Post, new { enctype = "multipart/form-data", facultyMail = Model.Faculty.Email }))
                        {
                            <section class="js-information form-fields no-padding clearfix">
                                <div class="row">

                                    <div class="col-lg-4 col-md-4 mt-10">
                                        <label>
                                            First Name
                                            <sup>*</sup>
                                        </label>
                                        <div>
                                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { placeholder = "Enter first name" } })
                                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-md-4 mt-10 ">
                                        <label>
                                            Last Name
                                            <sup>*</sup>
                                        </label>
                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { placeholder = "Enter your last name" } })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-lg-4 col-md-4 mt-10">
                                        <label>
                                            Email Address
                                            <sup>*</sup>
                                        </label>
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { placeholder = "Enter your email address" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                                    </div>
                                </div>

                                @Html.HiddenFor(m => m.Faculty.Email)
                                @Html.HiddenFor(m => m.Faculty.ID)
                                <div class="row">

                                    <div class="col-lg-4 col-md-4 mt-10 ">
                                        <label>
                                            Nationality
                                        </label>
                                        @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { placeholder = "Enter your nationality" } })
                                    </div>

                                    <div class="col-lg-4 col-md-4 mt-10 ">
                                        <label>
                                            Country of Origin
                                            <sup>*</sup>
                                        </label>
                                        @Html.DropDownListFor(model => model.CountryOfOrigin, ViewBag.CountryOfOrigin as SelectList, "Select country")
                                        @Html.ValidationMessageFor(model => model.CountryOfOrigin, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="col-lg-4 col-md-4 mt-10 ">
                                        <label>
                                            English Level Proficiency
                                            <sup>*</sup>
                                        </label>
                                        @Html.DropDownListFor(model => model.EnglishLevel, ViewBag.EnglishLevels as SelectList, "Select english level")
                                        @Html.ValidationMessageFor(model => model.EnglishLevel, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4 col-md-4 mt-10">
                                        <label>
                                            University From
                                            <sup>*</sup>
                                        </label>
                                        <div>
                                            @Html.EditorFor(model => model.UniversityFrom, new { htmlAttributes = new { placeholder = "Enter university name" } })
                                            @Html.ValidationMessageFor(model => model.UniversityFrom, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-md-4 mt-10 mb-10">
                                        <label>
                                            Gender
                                            <sup>*</sup>
                                        </label>
                                        <div class="col-lg-6 col-md-10 mt-10" style="width:20% !important;">
                                            <div class="radio-inline">
                                                @Html.RadioButton("Gender", "Male", true)
                                                <span class="lbl-chk">Mr.</span>
                                            </div>
                                        </div>
                                        <div class="col-lg-6 col-md-10 mt-10">
                                            <div class="radio-inline">
                                                @Html.RadioButton("Gender", "Female")
                                                <span class="lbl-chk">Ms.</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-md-4 mt-10" id="appType">
                                        <label>
                                            Application For
                                            <sup>*</sup>
                                        </label>
                                        <div class="mt-10">

                                            <div class="radio-inline" id="radioStudent">
                                                @Html.CheckBox("StudentSelected", new { id = "rStudent" })
                                                <span class="lbl-chk">Student</span>
                                            </div>

                                            <div class="radio-inline" id="radioFaculty">
                                                @Html.CheckBox("FacultySelected", new { id = "rFaculty" })
                                                <span class="lbl-chk">Faculty</span>
                                            </div>
                                        </div>

                                        @Html.ValidationSummary(true, "", new { @class = "text-danger vld" })
                                    </div>
                                </div>
                                <div class="clearfix"></div>

                                @if (Model.Faculty.StudentTypeOfExchangeObj != null)
                                {
                                    <div id="appStudent">
                                        <div class="row">

                                            <div class="col-lg-4 col-md-4 mt-10 ">
                                                <label>
                                                    Program Enrolled
                                                    <sup>*</sup>
                                                </label>
                                                @Html.EditorFor(model => model.ProgramEnrolled, new { htmlAttributes = new { placeholder = "Enter enrolled program" } })
                                                @Html.ValidationMessageFor(model => model.ProgramEnrolled, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-lg-4 col-md-4 mt-10 ">
                                                <label>
                                                    Semester Enrolled
                                                    <sup>*</sup>
                                                </label>
                                                @Html.EditorFor(model => model.SemesterEnrolled, new { htmlAttributes = new { placeholder = "Enter enrolled semester" } })
                                                @Html.ValidationMessageFor(model => model.SemesterEnrolled, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-lg-4 col-md-4 mt-10 ">
                                                <label>
                                                    Year of Enrollment
                                                    <sup>*</sup>
                                                </label>
                                                @Html.DropDownListFor(model => model.YearOfEnrollment, ViewBag.YearsOfEnrollment as SelectList, "Select year of enrollment")
                                                @Html.ValidationMessageFor(model => model.YearOfEnrollment, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="row">

                                            <div class="col-lg-4 col-md-4 mt-10 ">
                                                <label>
                                                    Estimate Year of Completion
                                                    <sup>*</sup>
                                                </label>
                                                @Html.DropDownListFor(model => model.YearOfCompletion, ViewBag.YearsOfCompletion as SelectList, "Select year of completion")
                                                @Html.ValidationMessageFor(model => model.YearOfCompletion, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="clearfix"></div>

                                @if (Model.Faculty.FacultyTypeOfExchangeObj != null)
                                {
                                    <div id="appFaculty">
                                        <div class="row">
                                            <div class="col-lg-4 col-md-4 mt-10 ">
                                                <label>
                                                    Highest Degree
                                                    <sup>*</sup>
                                                </label>
                                                @Html.DropDownListFor(model => model.HighestDegree, ViewBag.HighestDegrees as SelectList, "Select highest degree")
                                                @Html.ValidationMessageFor(model => model.HighestDegree, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-lg-4 col-md-4 mt-10 ">
                                                <label>
                                                    First Course
                                                    <sup>*</sup>
                                                </label>
                                                @Html.DropDownListFor(model => model.FirstCourse, ViewBag.FacultyCourses as SelectList)
                                                @Html.ValidationMessageFor(model => model.FirstCourse, "", new { @class = "text-danger" })

                                            </div>
                                            <div class="col-lg-4 col-md-4 mt-10 ">
                                                <label>
                                                    Second Course
                                                    <sup>*</sup>
                                                </label>
                                                @Html.DropDownListFor(model => model.SecondCourse, ViewBag.FacultyCourses as SelectList)
                                                @Html.ValidationMessageFor(model => model.FirstCourse, "", new { @class = "text-danger" })

                                            </div>
                                        </div>
                                        <div class="row">

                                            <div class="col-lg-4 col-md-4 mt-10 ">
                                                <label>
                                                    Third Course
                                                    <sup>*</sup>
                                                </label>
                                                @Html.DropDownListFor(model => model.ThirdCourse, ViewBag.FacultyCourses as SelectList)
                                                @Html.ValidationMessageFor(model => model.FirstCourse, "", new { @class = "text-danger" })

                                            </div>
                                            <div class="col-lg-4 col-md-4 mt-10 ">
                                                <label>
                                                    Fourth Course
                                                    <sup>*</sup>
                                                </label>
                                                @Html.DropDownListFor(model => model.FourthCourse, ViewBag.FacultyCourses as SelectList)
                                                @Html.ValidationMessageFor(model => model.FirstCourse, "", new { @class = "text-danger" })

                                            </div>
                                        </div>

                                    </div>
                                }
                                <div class="clearfix"></div>
                                <hr />

                                <div class="col-lg-4 col-md-4 mt-10 ">
                                    <label>
                                        University Name
                                        <sup>*</sup>
                                    </label>
                                    <input aria-label="University" type="text" name="last_name" value="@Model.Faculty.Name" disabled>
                                </div>

                                <div class="col-lg-4 col-md-4 mt-10 ">
                                    <label>
                                        University Country
                                        <sup>*</sup>
                                    </label>
                                    <input aria-label="University Country" type="text" name="last_name" value="@Model.Faculty.CountryObj.Name" disabled>
                                </div>

                                <div class="col-lg-4 col-md-4 mt-10 ">
                                    <label>
                                        University Region
                                        <sup>*</sup>
                                    </label>
                                    <input aria-label="School Region" type="text" name="last_name" value="@Model.Faculty.CountryObj.RegionObj.Name" disabled>
                                </div>

                                <div class="col-lg-4 col-md-4 mt-10 ">
                                    <label>
                                        Accreditation Number
                                        <sup>*</sup>
                                    </label>
                                    <input aria-label="School Region" type="text" name="last_name" value="@Model.Faculty.AccreditationNumber" disabled>
                                </div>

                                <div class="col-lg-4 col-md-4 mt-10 ">
                                    <label>
                                        Agreement Number
                                        <sup>*</sup>
                                    </label>
                                    @Html.EditorFor(model => model.AgreementNumber, new { htmlAttributes = new { placeholder = "Enter agreement number" } })
                                    @Html.ValidationMessageFor(model => model.AgreementNumber, "", new { @class = "text-danger" })

                                </div>

                                <div class="clearfix"></div>

                                <div class="col-lg-4 col-md-4 mt-10 ">
                                    <label>
                                        Uploaded CV
                                        <sup>*</sup>
                                    </label>
                                    <div>
                                        @Html.TextBox("CV", "", new { type = "file" }) <br />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 mt-10 ">
                                    <label>
                                        Transcript
                                    </label>
                                    <div>
                                        @Html.TextBox("Transcript", "", new { type = "file" }) <br />
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                                <fieldset class="name" style="margin-left:38%">
                                    <button type="submit" class="primary" id="new-account-button">Send my application</button>
                                </fieldset>
                            </section>

                            <input type="hidden" name="register" value="1">
                        }
                    </div>
                </div>
                <select id="hiddenFirst" style="display:none;"></select>
                <select id="hiddenSecond" style="display:none;"></select>
                <select id="hiddenThird" style="display:none;"></select>
                <select id="hiddenFourth" style="display:none;"></select>
            </div>
        </div>

    </div>
</div>
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("#applyBtn").click(function () {
            $('html,body').animate({
                scrollTop: $(".app-form").offset().top
            }, 'slow');
        });
    </script>
    <script>

    /**/
    var url = '@Url.Action("getCountries", "Home")';
    /**/

    var countries = $('#CountryId');
    function CallChangeFunc(val) {
        countries.empty();
        var id = val;
        $.getJSON(url, { regionId: id }, function (response) {
            $.each(response, function (index, item) {
                $('#CountryId').append('<option value=' + item.ID + '>' + item.Name + '</option > ');
            });
        });

    }
    </script>
    <script>
    $(document).ready(function () {

    $("#hiddenFirst").append($("#FirstCourse > option").clone());
    $("#hiddenSecond").append($("#SecondCourse > option").clone());
    $("#hiddenThird").append($("#ThirdCourse > option").clone());
    $("#hiddenFourth").append($("#FourthCourse > option").clone());

    $('.datepicker').datepicker({ dateFormat: 'MM-DD-YYYY' });

    var studentPlaces = @(Model.Faculty.StudentTypeOfExchangeObj != null ? 1 : 0);
    var facultyPlaces = @(Model.Faculty.FacultyTypeOfExchangeObj != null ? 1 : 0);

    if ($("#rStudent").is(':checked')) {
        $("#appStudent").show();
    }
    else {
        $("#appStudent").hide();
    }

    if ($("#rFaculty").is(':checked')) {
        $("#appFaculty").show();
    }
    else {
        $("#appFaculty").hide();
    }

    if (studentPlaces == 1 && facultyPlaces == 0) {
        $("#rStudent").prop("checked", true);
        $("#appStudent").show();
        $("#appFaculty").hide();

        $("#radioFaculty").hide();
            $("#rStudent").prop("readonly", true);
            $("#rFaculty").prop("readonly", true);
        }

        if (studentPlaces == 0 && facultyPlaces == 1) {
        $("#rFaculty").prop("checked", true);
        $("#appFaculty").show();
        $("#appStudent").hide();

        $("#radioStudent").hide();
            $("#rStudent").prop("readonly", true);
            $("#rFaculty").prop("readonly", true);
        }


});
    </script>
    <script>

        $("#rStudent").click(function () {
            $("#appFaculty .field-validation-error").empty();
            $("#rFaculty").prop("checked", false);
            $("#appType .validation-summary-errors").empty();
            resetOptions();

            if ($("#radioFaculty").css('display') == 'none') {
                return false;
            };

            if ($(this).is(':checked')) {
             
                $("#appStudent").show();
                $("#appFaculty").hide();

                $('#HighestDegree').prop('selectedIndex', 0);
                $('#FirstCourse').prop('selectedIndex', 0);
                $('#SecondCourse').prop('selectedIndex', 0);
                $('#ThirdCourse').prop('selectedIndex', 0);
                $('#FourthCourse').prop('selectedIndex', 0);
            }
            else {
                $("#appStudent .field-validation-error").empty();
                $("#appStudent").hide();

                $('#YearOfEnrollment').prop('selectedIndex', 0);
                $('#YearOfCompletion').prop('selectedIndex', 0);
                $('#ProgramEnrolled').val(null);
                $('#SemesterEnrolled').val(null);

            }
        });

        $("#rFaculty").click(function () {
            $("#appStudent .field-validation-error").empty();
            $("#rStudent").prop("checked", false);
            $("#appType .validation-summary-errors").empty();

            if ($("#radioStudent").css('display') == 'none') {
                return false;
            };

            if ($(this).is(':checked')) {
                $("#appFaculty").show();
                $("#appStudent").hide();

                $('#YearOfEnrollment').prop('selectedIndex', 0);
                $('#YearOfCompletion').prop('selectedIndex', 0);
                $('#ProgramEnrolled').val(null);
                $('#SemesterEnrolled').val(null);
            }
            else {
                resetOptions();
                $("#appFaculty .field-validation-error").empty();
                $("#appFaculty").hide();

                $('#HighestDegree').prop('selectedIndex', 0);
                $('#FirstCourse').prop('selectedIndex', 0);
                $('#SecondCourse').prop('selectedIndex', 0);
                $('#ThirdCourse').prop('selectedIndex', 0);
                $('#FourthCourse').prop('selectedIndex', 0);
            }
        });

        function resetOptions() {
            $('#FirstCourse').empty();
            $("#FirstCourse").append($("#hiddenFirst > option").clone());

            $('#SecondCourse').empty();
            $("#SecondCourse").append($("#hiddenSecond > option").clone());

            $('#ThirdCourse').empty();
            $("#ThirdCourse").append($("#hiddenThird > option").clone());

            $('#FourthCourse').empty();
            $("#FourthCourse").append($("#hiddenFourth > option").clone());
        }
    </script>

    <script>
        var previousValue;
        var previousText;

        $.fn.sortSelect = function () {
            var op = this.children("option");

            op.sort(function (a, b) {
                return a.value > b.value ? 1 : -1;
            })

            var index = $(this).prop('selectedIndex');
            var sorted = this.empty().append(op);
            sorted.prop("selectedIndex", index);

            return sorted;
        }
        //first course
        $("#FirstCourse").on('focus', function () {
            previousValue = $(this).val();
            previousText = $("#FirstCourse option:selected").text();

        }).change(function () {
            var value = $(this).val();
            if (value != "-1" && value != previousValue) {
                $("#SecondCourse option[value='" + value + "']").remove();
                $("#ThirdCourse option[value='" + value + "']").remove();
                $("#FourthCourse option[value='" + value + "']").remove();
            }

            if (previousValue != "-1") {
                $('#SecondCourse').append($('<option>', {
                    value: previousValue,
                    text: previousText
                }));
                $('#ThirdCourse').append($('<option>', {
                    value: previousValue,
                    text: previousText
                }));

                $('#FourthCourse').append($('<option>', {
                    value: previousValue,
                    text: previousText
                }));
            }

            $("#SecondCourse").sortSelect();
            $("#ThirdCourse").sortSelect();
            $("#FourthCourse").sortSelect();

        });

        //second course
        $("#SecondCourse").on('focus', function () {
            previousValue = $(this).val();
            previousText = $("#SecondCourse option:selected").text();

        }).change(function () {
            var value = $(this).val();

            if (value != "-1" && value != previousValue) {
                $("#FirstCourse option[value='" + value + "']").remove();
                $("#ThirdCourse option[value='" + value + "']").remove();
                $("#FourthCourse option[value='" + value + "']").remove();
            }

            if (previousValue != "-1") {
                $('#FirstCourse').append($('<option>', {
                    value: previousValue,
                    text: previousText
                }));
                $('#ThirdCourse').append($('<option>', {
                    value: previousValue,
                    text: previousText
                }));

                $('#FourthCourse').append($('<option>', {
                    value: previousValue,
                    text: previousText
                }));
            }

            $("#FirstCourse").sortSelect();
            $("#ThirdCourse").sortSelect();
            $("#FourthCourse").sortSelect();
        });

        //third course
        $("#ThirdCourse").on('focus', function () {
            previousValue = $(this).val();
            previousText = $("#ThirdCourse option:selected").text();

        }).change(function () {
            var value = $(this).val();

            if (value != "-1" && value != previousValue) {
                $("#FirstCourse option[value='" + value + "']").remove();
                $("#SecondCourse option[value='" + value + "']").remove();
                $("#FourthCourse option[value='" + value + "']").remove();
            }

            if (previousValue != "-1") {
                $('#FirstCourse').append($('<option>', {
                    value: previousValue,
                    text: previousText
                }));
                $('#SecondCourse').append($('<option>', {
                    value: previousValue,
                    text: previousText
                }));

                $('#FourthCourse').append($('<option>', {
                    value: previousValue,
                    text: previousText
                }));
            }

            $("#FirstCourse").sortSelect();
            $("#SecondCourse").sortSelect();
            $("#FourthCourse").sortSelect();
        });

        //fourth course
        $("#FourthCourse").on('focus', function () {
            previousValue = $(this).val();
            previousText = $("#FourthCourse option:selected").text();

        }).change(function () {
            var value = $(this).val();

            if (value != "-1" && value != previousValue) {
                $("#FirstCourse option[value='" + value + "']").remove();
                $("#ThirdCourse option[value='" + value + "']").remove();
                $("#SecondCourse option[value='" + value + "']").remove();
            }

            if (previousValue != "-1") {
                $('#FirstCourse').append($('<option>', {
                    value: previousValue,
                    text: previousText
                }));
                $('#ThirdCourse').append($('<option>', {
                    value: previousValue,
                    text: previousText
                }));

                $('#SecondCourse').append($('<option>', {
                    value: previousValue,
                    text: previousText
                }));
            }

            $("#FirstCourse").sortSelect();
            $("#ThirdCourse").sortSelect();
            $("#SecondCourse").sortSelect();

        });
    </script>
}



